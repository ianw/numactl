.\" Copyright 2003,2004 Andi Kleen, SuSE Labs.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.TH SET_MEMPOLICY "2" "Nov 2003" "SuSE Labs" "Linux Programmer's Manual"
.SH NAME
set_mempolicy \- Set default NUMA memory policy for a process and its children.

.SH SYNOPSIS
.B "#include <numaif.h>" 
.sp
.B int set_mempolicy(int policy, unsigned long *nodemask, unsigned long maxnode) 
.sp				  
.SH DESCRIPTION
.B set_mempolicy
sets the NUMA memory policy of the current process to 
.B policy
A NUMA machine has different
memory controllers with different distances to specific CPUs.
The memory policy defines in which node memory is allocated for 
the process. This system call defines the default policy for the 
process, in addition a per memory range policy can be set 
using 
.I mbind(2).  The policy is only applied when a new page is allocated
for the process. For anonymous memory this is when the page is first
touched by the application.

Available policies are 
.B MPOL_DEFAULT,
.B MPOL_BIND,
.B MPOL_INTERLEAVE,
.B MPOL_PREFERRED.
All policies except 
.I MPOL_DEFAULT
require to specify the nodes they apply to in the
.B nodemask 
parameter.
.I nodemask 
is pointer to a bit field of nodes that contains upto 
.B maxnode
bits. The bit field size is rounded to the next multiple of 
sizeof(unsigned long), but the kernel will only use bits upto 
.I maxnode.

The 
.I MPOL_DEFAULT
policy is the default and means to use the underlying process policy
(which can be modified with
.I set_mempolicy(2)
). Unless the process policy has been changed this means to allocate
memory on the node of the CPU that triggered the allocation. 
.I nodemask 
should be passed as NULL.

The
.I MPOL_BIND
policy is a strict policy that restricts memory allocation to the 
nodes specified in 
.I nodemask.
There won't be allocations on other nodes.

.I MPOL_INTERLEAVE
interleaves allocations to the nodes specified in 
.I nodemask.
This optimizes for bandwidth instead of latency.
To be effective the memory area should be fairly large, at least 1MB or bigger.

.I MPOL_PREFERRED
sets the preferred node for allocation. The kernel will try to allocate in this
node first and fall back to other nodes when the preferred nodes is low on free 
memory.  Only the first node in the 
.I nodemask 
is used. When no node is set in the mask the current node is used for allocation.

There are no
.B flags
defined right now. This parameter should be currently always set to 0.

Memory policy is inherited to children.

.SH NOTES
Process policy is not remembered when the page is swapped out.

Applications should consider using the higher level functions
in 
.I numa(3)
instead. This library is available in the 
.I numactl
package.

.SH RETURN VALUE
.I set_mempolicy
returns -1 when an error occurred, otherwise 0.

.\" .SH ERRORS
.\" writeme

.SH VERSIONS
The
.I set_mempolicy
syscall was added to the Linux kernel with version
.I 2.6.7rc1.
It is only available on kernels compiled with
.I CONFIG_NUMA.

Until glibc supports these system calls you can link with 
.I -lnuma
to get system call definitions. libnuma is available in the numactl
package. It also has the
.I numaif.h
header.

.SH SEE ALSO
.I mbind(2),
.I get_mempolicy(2),
.I numactl(8),
.I numa(3)
